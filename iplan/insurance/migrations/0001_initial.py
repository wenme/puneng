# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='advice',
            fields=[
                ('id', models.AutoField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('client_id', models.IntegerField()),
                ('product_name', models.CharField(max_length=64)),
                ('insurer', models.CharField(max_length=64)),
                ('product_type', models.IntegerField()),
                ('annual_premium', models.FloatField()),
                ('avg_premium', models.FloatField(null=True)),
                ('premium_period', models.IntegerField()),
                ('benefit_age_max', models.IntegerField()),
                ('life', models.IntegerField()),
                ('critical_illness', models.IntegerField()),
                ('hospital_expense', models.IntegerField()),
                ('accidental_protection', models.IntegerField()),
                ('accidental_medical_expense', models.IntegerField()),
                ('saving', models.BooleanField()),
                ('product_logo', models.CharField(max_length=32)),
                ('product_url', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ci',
            fields=[
                ('product_code', models.IntegerField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('waiting_period', models.IntegerField(null=True)),
                ('ci', models.IntegerField(null=True)),
                ('ci_max_claim', models.IntegerField(null=True)),
                ('non_ci', models.IntegerField(null=True)),
                ('non_ci_max_claim', models.IntegerField(null=True)),
                ('non_ci_claim_method', models.IntegerField(null=True, choices=[(0, b'no_claim'), (1, b'come_with_ci'), (2, b'extra_cliam')])),
                ('early_stage_ci', models.IntegerField(null=True)),
                ('early_stage_ci_claim', models.FloatField(null=True)),
                ('juvenile_minor_illness', models.IntegerField(null=True)),
                ('cancer_max_claim', models.IntegerField(null=True)),
                ('cancer_total_claim', models.IntegerField(null=True)),
                ('face_amount_growth_rate', models.FloatField(null=True)),
                ('waiver', models.NullBooleanField()),
                ('first_n_year_plus', models.FloatField(null=True)),
                ('first_n_year', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='feedback',
            fields=[
                ('client_id', models.IntegerField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('score', models.IntegerField()),
                ('redeem', models.BooleanField()),
                ('update_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='insurer',
            fields=[
                ('insurer_code', models.CharField(max_length=20, serialize=False, verbose_name=b'id', primary_key=True)),
                ('insurer_name', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=20)),
                ('logo', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='life',
            fields=[
                ('product_code', models.IntegerField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('waiting_period', models.IntegerField(null=True)),
                ('claim_18', models.IntegerField(null=True, choices=[(0, b'no_constraints'), (1, b'less_than_million_before_18'), (2, b'return_premium_before_18')])),
                ('claim_base', models.IntegerField(null=True, choices=[(1, b'sum_assured'), (2, b'premium')])),
                ('death_illness', models.FloatField(null=True)),
                ('death_accident', models.FloatField(null=True)),
                ('advance_payment_with_ci', models.NullBooleanField()),
                ('permanent_disability', models.NullBooleanField()),
                ('face_amount_growth_rate', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='need',
            fields=[
                ('client_id', models.IntegerField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('life_need', models.IntegerField()),
                ('critical_illness_need', models.IntegerField()),
                ('hospital_expense_need', models.IntegerField()),
                ('accidental_protection_need', models.IntegerField()),
                ('accidental_medical_expense_need', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='need_analysis',
            fields=[
                ('client_id', models.IntegerField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('death_illness', models.IntegerField()),
                ('ci_illness', models.IntegerField()),
                ('hospital_illness', models.IntegerField()),
                ('disable_illness', models.IntegerField()),
                ('death_accident', models.IntegerField()),
                ('ci_accident', models.IntegerField()),
                ('hospital_accident', models.IntegerField()),
                ('disable_accident', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='plan',
            fields=[
                ('client_id', models.IntegerField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('protection_score', models.IntegerField()),
                ('life', models.IntegerField()),
                ('critical_illness', models.IntegerField()),
                ('hospital_expense', models.IntegerField()),
                ('accidental_protection', models.IntegerField()),
                ('accidental_medical_expense', models.IntegerField()),
                ('total_fyp', models.FloatField()),
                ('avg_premium', models.FloatField(null=True)),
                ('irr', models.FloatField(null=True)),
                ('loading', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='premium_rate',
            fields=[
                ('id', models.AutoField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('product_code', models.IntegerField()),
                ('application_age', models.IntegerField(null=True)),
                ('gender', models.IntegerField(choices=[(0, b'female'), (1, b'male'), (2, b'unisex')])),
                ('smoker', models.IntegerField(choices=[(0, b'for_smoker'), (1, b'for_non_smoker'), (2, b'it_does_not_matter')])),
                ('premium_period', models.IntegerField()),
                ('benefit_period', models.IntegerField()),
                ('benefit_age_max', models.IntegerField()),
                ('annual_premium_10k', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='product',
            fields=[
                ('product_code', models.IntegerField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('internal_code', models.CharField(max_length=64)),
                ('product_name', models.CharField(max_length=100)),
                ('insurer_code', models.CharField(max_length=64)),
                ('launch_year', models.DateTimeField(null=True)),
                ('application_age_min', models.IntegerField(null=True)),
                ('application_age_max', models.IntegerField(null=True)),
                ('benefit_age_max', models.IntegerField(null=True)),
                ('min_face_amount', models.IntegerField(null=True)),
                ('max_face_amount', models.IntegerField(null=True)),
                ('product_type', models.IntegerField(null=True, choices=[(1, b'accident_insurance'), (2, b'critical_illness_insurance'), (3, b'comprehensive_insurance'), (4, b'life_insurance'), (5, b'medical_insurance'), (6, b'cancer_insurance'), (7, b'saving_insurance')])),
                ('channel', models.IntegerField(null=True, choices=[(0, b'offline'), (1, b'online'), (2, b'agent')])),
                ('long_term', models.NullBooleanField()),
                ('currency', models.CharField(max_length=20, null=True)),
                ('rider', models.NullBooleanField()),
                ('life', models.NullBooleanField()),
                ('ci', models.NullBooleanField()),
                ('ap', models.NullBooleanField()),
                ('med', models.NullBooleanField()),
                ('saving', models.NullBooleanField()),
                ('investment', models.NullBooleanField()),
                ('price_table', models.IntegerField(null=True, choices=[(0, b'no price'), (1, b'quotation'), (2, b'premium_rate')])),
                ('terms', models.TextField(null=True)),
                ('brochure', models.TextField(null=True)),
                ('product_url', models.TextField(null=True)),
                ('cover_url', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='product_feature',
            fields=[
                ('product_code', models.IntegerField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('average_loading', models.FloatField()),
                ('median_loading', models.FloatField()),
                ('core_benefit_amount', models.IntegerField()),
                ('critical_illness_life', models.BooleanField()),
                ('life_min', models.IntegerField()),
                ('life_max', models.IntegerField()),
                ('critical_illness_min', models.IntegerField()),
                ('critical_illness_max', models.IntegerField()),
                ('hospital_expense_min', models.IntegerField()),
                ('hospital_expense_max', models.IntegerField()),
                ('accident_protect_min', models.IntegerField()),
                ('accident_protect_max', models.IntegerField()),
                ('accident_medical_expense_min', models.IntegerField()),
                ('accident_medical_expense_max', models.IntegerField()),
                ('maturity_min', models.IntegerField()),
                ('maturity_max', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='questionaire_ans',
            fields=[
                ('client_id', models.IntegerField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('social_security', models.IntegerField(choices=[(1, b'medical_insurance'), (2, b'free_medical_service'), (3, b'none')])),
                ('income_weight', models.FloatField()),
                ('mortgage_balance', models.IntegerField()),
                ('household_expense', models.IntegerField()),
                ('smoking', models.BooleanField()),
                ('inheritance', models.BooleanField()),
                ('trip_frequency', models.BooleanField()),
                ('budget', models.IntegerField()),
                ('update_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='quotation',
            fields=[
                ('quotation_id', models.AutoField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('product_code', models.IntegerField()),
                ('life', models.IntegerField()),
                ('critical_illness', models.IntegerField()),
                ('hospital_expense', models.IntegerField()),
                ('accidental_protection', models.IntegerField()),
                ('accidental_medical_expense', models.IntegerField()),
                ('maturity', models.IntegerField()),
                ('benefit_period', models.IntegerField()),
                ('premium_period', models.IntegerField()),
                ('application_age_min', models.IntegerField()),
                ('application_age_max', models.IntegerField()),
                ('benefit_age_max', models.IntegerField()),
                ('gender', models.IntegerField(choices=[(0, b'female'), (1, b'male'), (2, b'unisex')])),
                ('annual_premium', models.FloatField()),
                ('loading', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='risk',
            fields=[
                ('id', models.AutoField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('benefit', models.CharField(max_length=32)),
                ('age_min', models.IntegerField()),
                ('age_max', models.IntegerField()),
                ('gender', models.IntegerField(choices=[(0, b'female'), (1, b'male'), (2, b'unisex')])),
                ('probability', models.FloatField()),
                ('institution', models.CharField(max_length=32)),
                ('published', models.DateTimeField(default=django.utils.timezone.now)),
                ('region', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='rule',
            fields=[
                ('protection_id', models.IntegerField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('protection_name', models.CharField(max_length=32)),
                ('priority', models.FloatField()),
                ('benchmark', models.IntegerField()),
                ('non_social_security', models.IntegerField()),
                ('gov_medical_care', models.IntegerField()),
                ('smoker', models.IntegerField()),
                ('hereditary_disease', models.IntegerField()),
                ('traveller', models.IntegerField()),
                ('benefit_age_min', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='saving',
            fields=[
                ('product_code', models.IntegerField(serialize=False, verbose_name=b'id', primary_key=True)),
                ('y40_guaranteed_irr', models.FloatField(null=True)),
                ('y10_expected_irr', models.FloatField(null=True)),
                ('y20_expected_irr', models.FloatField(null=True)),
                ('y30_expected_irr', models.FloatField(null=True)),
                ('y40_expected_irr', models.FloatField(null=True)),
                ('y50_expected_irr', models.FloatField(null=True)),
                ('maturity_expected_irr', models.FloatField(null=True)),
                ('par', models.IntegerField(null=True, choices=[(0, b'no_par'), (1, b'american_par'), (2, b'british_par'), (3, b'cash_par')])),
                ('par_distribution', models.FloatField(null=True)),
                ('annuity', models.NullBooleanField()),
                ('bonus_encash_year', models.IntegerField(null=True)),
                ('surrender_partially_year', models.IntegerField(null=True)),
                ('site_url', models.TextField(null=True)),
                ('y10_guaranteed_irr', models.FloatField(null=True)),
                ('y20_guaranteed_irr', models.FloatField(null=True)),
                ('y30_guaranteed_irr', models.FloatField(null=True)),
                ('y50_guaranteed_irr', models.FloatField(null=True)),
                ('maturity_guaranteed_irr', models.FloatField(null=True)),
                ('longevity', models.NullBooleanField()),
                ('guaranteed_payback_period', models.IntegerField(null=True)),
                ('expected_payback_period', models.IntegerField(null=True)),
            ],
        ),
    ]
